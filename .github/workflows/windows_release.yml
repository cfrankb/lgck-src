name: Windows Release

on:
  push:
    branches:
      - 'master'
      - 'continuous-integration'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'
      - 'continuous-integration'

defaults:
  run:
    shell: cmd

env:
  VERSION: 0.6.9
  BUILD_TYPE: Release
  SOURCE_DIR: ${{ github.workspace }}
  QT_VERSION: 6.8.3
  ARTIFACT: LgckBuilder_Win64
  ARCH: win64_msvc2019_64
  HOST: windows
  VSARCH: x64

jobs:
  build:
    runs-on: windows-2019

    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Get all tags for correct version determination
        working-directory: ${{ github.workspace }}
        run: |
          git fetch --all --tags -f

      - name: Create build directory
        run: |
          mkdir ${{ runner.temp }}\build
          mkdir ${{ runner.temp }}\build\easydoc
          mkdir ${{ runner.temp }}\build\obl5edit
          mkdir ${{ runner.temp }}\build\lgck-builder
          mkdir ${{ runner.temp }}\setup
          mkdir ${{ runner.temp }}\build\libs
          mkdir ${{ runner.temp }}\build\headers
          mkdir ${{ runner.temp }}\build\headers\lua5.2
          mkdir ${{ runner.temp }}\build\headers\SDL2

      - name: Copy Setup Files
        working-directory: ${{ runner.temp }}
        run: |
          xcopy ${{ env.SOURCE_DIR }}\distro\setup ${{ runner.temp }}\setup /s /e

      - name: Download SDL2
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://github.com/libsdl-org/SDL/releases/download/release-2.26.1/SDL2-devel-2.26.1-VC.zip
          target: ${{ runner.temp }}\

      - name: Unzip SDL2 / copy files
        working-directory: ${{ runner.temp }}
        run: |
          7z x SDL2-devel-2.26.1-VC.zip -osdl2
          dir /s sdl2
          copy sdl2\SDL2-2.26.1\include\*.h ${{ runner.temp }}\build\headers\SDL2
          copy sdl2\SDL2-2.26.1\lib\x64\SDL2.lib  ${{ runner.temp }}\build\libs
          copy sdl2\SDL2-2.26.1\lib\x64\SDL2main.lib  ${{ runner.temp }}\build\libs
          copy sdl2\SDL2-2.26.1\lib\x64\SDL2.dll  ${{ runner.temp }}\setup

      - name: Download SDL2-mixer
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://github.com/libsdl-org/SDL_mixer/releases/download/release-2.6.2/SDL2_mixer-devel-2.6.2-VC.zip
          target: ${{ runner.temp }}\

      - name: Unzip SDL2-mixer / copy files
        working-directory: ${{ runner.temp }}
        run: |
          7z x SDL2_mixer-devel-2.6.2-VC.zip -osdl2-mixer
          dir /s sdl2-mixer
          copy sdl2-mixer\SDL2_mixer-2.6.2\include\SDL_mixer.h ${{ runner.temp }}\build\headers\SDL2
          copy sdl2-mixer\SDL2_mixer-2.6.2\lib\x64\SDL2_mixer.lib ${{ runner.temp }}\build\libs
          copy sdl2-mixer\SDL2_mixer-2.6.2\lib\x64\SDL2_mixer.dll ${{ runner.temp }}\setup
          copy sdl2-mixer\SDL2_mixer-2.6.2\lib\x64\optional\libogg-0.dll ${{ runner.temp }}\setup

      - name: Download JOM
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: http://download.qt.io/official_releases/jom/jom.zip
          target: ${{ runner.temp }}\

      - name: Unzip JOM
        working-directory: ${{ runner.temp }}
        run: |
          7z x jom.zip -ojom

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VERSION }}
          host: ${{ env.HOST }}
          target: desktop
          arch: ${{ env.ARCH }}
          dir: ${{ runner.temp }}
          modules:
          setup-python: false
          cache: true

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: ${{ env.VSARCH }}

      - name: Download zlib
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://cfrankb.com/files/libs/zlib13.zip
          target: ${{ runner.temp }}\

      - name: Unzip zlib
        working-directory: ${{ runner.temp }}
        run: |
          7z x zlib13.zip -ozlib
          dir /w zlib

      - name: compile zlib
        working-directory: ${{ runner.temp }}
        run: |
          cd zlib\\zlib-1.3
          dir /w
          nmake /f win32/Makefile.msc
          dir /w

          copy zlib.lib ${{ runner.temp }}\build\libs
          copy zlib.h ${{ runner.temp }}\build\headers
          copy zconf.h ${{ runner.temp }}\build\headers

      - name: Download Lua5.4
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://www.lua.org/ftp/lua-5.4.4.tar.gz
          target: ${{ runner.temp }}\

      - name: Unzip Lua5.4
        working-directory: ${{ runner.temp }}
        run: |
          7z x lua-5.4.4.tar.gz -olua54.tar
          7z x lua54.tar -olua54

      - name: Build lua54 / copy files
        working-directory: ${{ runner.temp }}\lua54\lua-5.4.4
        run: |
          cd src
          :: Clean up files from previous builds
          IF EXIST *.o @DEL *.o
          IF EXIST *.obj @DEL *.obj
          IF EXIST *.dll @DEL *.dll
          IF EXIST *.exe @DEL *.exe

          :: Compile all .c files into .obj
          CL /MD /O2 /c /DLUA_BUILD_AS_DLL *.c

          :: Rename two special files
          REN lua.obj lua.o
          REN luac.obj luac.o

          :: Link up all the other .objs into a .lib and .dll file
          LINK /DLL /IMPLIB:lua.lib /OUT:lua.dll *.obj

          :: Link lua into an .exe
          LINK /OUT:lua.exe lua.o lua.lib

          :: Create a static .lib
          LIB /OUT:lua-static.lib *.obj

          :: Link luac into an .exe
          LINK /OUT:luac.exe luac.o lua-static.lib

          copy lua.lib ${{ runner.temp }}\build\libs
          copy lua-static.lib ${{ runner.temp }}\build\libs
          copy lua.dll ${{ runner.temp }}\setup
          copy lauxlib.h ${{ runner.temp }}\build\headers\lua5.2
          copy lualib.h ${{ runner.temp }}\build\headers\lua5.2
          copy luaconf.h ${{ runner.temp }}\build\headers\lua5.2
          copy lua.h ${{ runner.temp }}\build\headers\lua5.2

          dir /s
          dir /s ${{ runner.temp }}\build\setup
          dir /s ${{ runner.temp }}\build\libs

      - name: Build LGCK Builder
        working-directory: ${{ runner.temp }}\build\lgck-builder
        run: |
          qmake -r ${{ env.SOURCE_DIR }}\\src\\lgck-builder\\lgck-builder.pro
          dir /s
          ${{ runner.temp }}\jom\jom -j2
          dir /s
          copy release\lgck-builder.exe ${{ runner.temp }}\setup

      - name: Build Obl5Edit
        working-directory: ${{ runner.temp }}\build\obl5edit
        run: |
          qmake -r ${{ env.SOURCE_DIR }}\\src\\obl5edit\\obl5edit.pro
          dir /s
          ${{ runner.temp }}\jom\jom -j2
          dir /s
          copy release\obl5edit.exe ${{ runner.temp }}\setup

      - name: Build Easydoc
        working-directory: ${{ runner.temp }}\build\easydoc
        run: |
          qmake -r ${{ env.SOURCE_DIR }}\\src\\easydoc\\easydoc.pro
          dir /s
          ${{ runner.temp }}\jom\jom -j2
          dir /s
          copy release\easydoc.exe ${{ runner.temp }}\setup

      - name: Package for distribution
        working-directory: ${{ runner.temp }}\setup
        run: |
          windeployqt --qmldir ${{ runner.temp }}\setup lgck-builder.exe --pdb --release --no-compiler-runtime  --no-translations
          copy C:\Windows\System32\concrt140.dll .
          copy C:\Windows\System32\vccorlib140.dll .
          copy C:\Windows\System32\msvcp140.dll .
          copy C:\Windows\System32\vcruntime140.dll .
          copy C:\Windows\System32\msvcp140_1.dll .
          copy C:\Windows\System32\vcruntime140_1.dll .          
          echo "This is a portable version of LGCK builder." > portable.txt
          dir /s

      - name: Save build artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.ARTIFACT }}_${{ env.VERSION }}
          path: ${{ runner.temp }}\setup
